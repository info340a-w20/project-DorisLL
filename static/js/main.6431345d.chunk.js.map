{"version":3,"sources":["SingleCard.js","cardDeck.js","PageHeader.js","PageFooter.js","InputForms.js","barChart.js","hospitalizations.js","estimatePage.js","IntroPage.js","InputBox.js","ZipName.js","SearchCard.js","Map.js","Table.js","VaccinePage.js","LogIn.js","App.js","serviceWorker.js","index.js"],"names":["SingleCard","props","Card","className","Header","as","id","this","header","Body","Text","text","React","Component","Deck","cards","cardContent","forEach","card","newCard","cardHeader","cardText","push","CardDeck","PageHeader","href","aria-hidden","PageFooter","InputForms","inputBoxes","inputs","input","Object","keys","key","newInput","type","onChange","e","onUpdate","onClick","EstimateBarChart","data","name","value","inputtedGuess","averageGuess","actualValue","width","height","dataKey","barSize","fill","Hospitalizations","handleChange","event","setState","target","handleSubmit","userRef","submissionsRef","child","firebase","auth","currentUser","uid","submittedValue","Number","state","set","guessedInc","allInc","renderedAverage","actualInc","submitted","database","ref","dataRef","on","snapshot","submissionsObject","val","submissionArray","map","user","undefined","console","log","userGuess","givenVal","compareTo","diffVal","diff","Math","round","abs","measurementName","newAverage","reduce","a","b","length","style","textAlign","color","compare","paragraph","visibility","bind","EstimatePage","IntroPage","InputBox","onZipChanged","items","suggestions","regex","RegExp","sort","filter","v","test","changeValue","processDefault","allDefaultZip","empty","upDateEmpty","zipRef","item","suggestionSelected","unregisterAuthObserver","onAuthStateChanged","dataKeys","string","d","newZip","frequency","remove","onInput","renderSuggestions","disabled","saveDefault","deleteHistory","split","SearchCard","ZipName","changeStoredValue","require","VaccineMap","propsValue","zip","bound","selected","longLatGroup","wants","i","selectedSingle","ZIP","longLat","Latitude","Longitude","window","L","latLngBounds","Map","center","zoom","bounds","TileLayer","url","attribution","marker","Marker","position","Popup","Name","City","MuiVirtualizedTable","getRowClassName","index","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","component","tableCell","noClick","variant","align","numeric","headerRenderer","label","headerHeight","tableProps","gridStyle","direction","table","rowClassName","other","headerProps","defaultProps","VirtualizedTable","withStyles","theme","display","alignItems","boxSizing","flip","paddingRight","cursor","backgroundColor","palette","grey","flex","allrows","ReactVirtualizedTable","rows","SingleRow","widthAvg","innerWidth","Paper","rowCount","rowGetter","VaccinePage","onChangeInputValue","text-align","LogIn","uiConfig","firebaseAuth","fbAuth","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","App","isSignedIn","to","signOut","path","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6431345d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Card} from 'react-bootstrap';\nimport './css/WebpageStyle.css'\n\nexport class SingleCard extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    //this.props.header\n    //this.props.text\n    render() {\n        return (\n            <Card className = \"card\">\n                <Card.Header className=\"card-header\" as=\"h2\" id=\"card-header\">{this.props.header}</Card.Header>\n                <Card.Body className=\"card-body\">\n                    <Card.Text>\n                        {this.props.text}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {SingleCard} from './SingleCard.js'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport class Deck extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        //will accept this.props.cardContent that is an array of ojects with {cardHeader: , cardText: }\n        let cards = [];\n        this.props.cardContent.forEach((card) => {\n            let newCard = <SingleCard header = {card.cardHeader} text = {card.cardText} />\n            cards.push(newCard);\n        });\n\n        return (\n            <CardDeck>\n                {cards}\n            </CardDeck>\n        );\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBContainer } from \"mdbreact\";\nimport './css/WebpageStyle.css'\n\nexport class PageHeader extends React.Component {\n    render() {\n        return (\n          <div>\n            <header className=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"navbar\">\n              <h1 className=\"navbar-brand\"><a href=\"./Intro_Page.html\"><i className=\"fa fa-stethoscope\" aria-hidden=\"true\"></i></a> The Flu Vaccine</h1>\n            </header>\n          </div>\n        )    \n    }\n}","\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBContainer } from \"mdbreact\";\nimport './css/WebpageStyle.css'\n\nexport class PageFooter extends React.Component {\n    render() {\n        return (\n            <footer>\n                <h4>Contact Us:</h4>\n                <nav className=\"contact\">\n                    <a href=\"tel:1234567890\"><i className=\"fa fa-phone link-icon\" aria-hidden=\"true\"></i><span className=\"nav-label\">(123)456-7890</span></a>\n                    <a href=\"mailto:InfoStudent@UW.edu\"><i className=\"fa fa-envelope link-icon\" aria-hidden=\"true\"></i><span className=\"nav-label\">InfoStudent@UW.edu</span></a>\n                </nav>\n            </footer>\n        )    \n    }\n}","import React from 'react';\n\nexport class InputForms extends React.Component {\n\n    render() {\n        let inputBoxes = [];\n        this.props.inputs.forEach((input) => {\n            let inputObject = Object.keys(input)\n            inputObject.forEach((key) => {\n                let newInput = (\n                    <label>\n                        {input[key]}\n                        {/*the state at the key will be assigned*/}\n                        <input type=\"number\" onChange={(e) => this.props.onUpdate(e)}/>\n                    </label>\n                )\n                inputBoxes.push(newInput);\n            })\n        });\n\n        return (\n            <form className=\"form\">\n                {inputBoxes} <br/>\n                <button type = \"button\" id = \"submitButton\" onClick={(e) => this.props.onClick(e)}>Submit</button>\n            </form>\n        )\n    }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BarChart, Bar, XAxis, YAxis } from 'recharts';\nimport './css/WebpageStyle.css'\n\nexport class EstimateBarChart extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    //expects stateObject\n\n    render() {\n        //expects an array of objects\n        //this.props.data will either be incubation\n        let data = [{name: 'Your Estimate', value: this.props.inputtedGuess}, {name: 'Average Estimate', value: this.props.averageGuess}, {name: 'Actual Value', value: this.props.actualValue}];\n        return (\n            <div>\n                <BarChart width={600} height={300} data={data}>\n                  <XAxis dataKey=\"name\"/>\n                  <YAxis />\n                  <Bar type=\"monotone\" dataKey=\"value\" barSize={30} fill=\"darkred\" />\n                </BarChart>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {InputForms} from './InputForms.js'\nimport {EstimateBarChart} from './barChart.js'\nimport {Deck} from './cardDeck.js'\nimport './css/WebpageStyle.css'\nimport firebase from \"firebase\";\nimport 'firebase/database';\n\n\n//this.props.allGuesses\n//this.props.actualValue\n//this.props.inputs\n//inputs=[{'guessedInc': \"The average number of days a disease is incubated is \"}]\n\nexport class Hospitalizations extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          inputtedGuess: '',\n          guessedInc: 0,\n          allInc: [],\n          renderedAverage: 0,\n          actualInc: 0,\n          submitted: false\n        }\n    }\n    \n    componentDidMount() {\n      this.submissionsRef = firebase.database().ref(this.props.dataRef);\n      this.submissionsRef.on(\"value\", (snapshot) => {\n        let submissionsObject = snapshot.val();\n        let submissionKeys = Object.keys(submissionsObject);\n        //add value each to an array\n        let submissionArray = submissionKeys.map((key) => {\n          let submission = submissionsObject[key];\n          return submission.value;\n        })\n\n        //this.setState({allInc: submissionArray});\n        \n        //check to see if the keys array contains the userid\n        //set the state to default values if they do no exist in the database\n        //if they do exist, set the state to their guess, and the rendered values (leave extimates unmodified to the updated snapshot version)\n        \n        let user = firebase.auth().currentUser.uid;\n        if(submissionsObject[user] != undefined) {\n          console.log(\"user found\")\n          let userObject = submissionsObject[user];\n          let userGuess = userObject.value;\n          console.log(\"userGuess: \" + userGuess);\n          this.setState({\n            guessedInc: userGuess,\n            allInc: submissionArray,\n            actualInc: this.props.actualValue,\n            submitted: true\n          });\n          console.log(\"user found state: \", this.state);\n        }\n\n\n        console.log(\"state: \", this.state);\n    })\n\n    }\n\n    handleChange = (event) => {\n        this.setState({inputtedGuess: event.target.value});\n      }\n    \n      handleSubmit = (event) => {\n        const userRef = this.submissionsRef.child(firebase.auth().currentUser.uid);\n        let submittedValue = Number(this.state.inputtedGuess);\n        userRef.set({\n          value: submittedValue,\n        });\n\n      }\n\n    compare(givenVal, compareTo) {\n      let string = '';\n      let diffVal = compareTo.value - givenVal.value;\n      let diff = \"below\";\n      if (diffVal < 0) {\n        diff = \"above\";\n      }\n\n      string = (givenVal.name + \" (\" + Math.round(givenVal.value) + \") \" + \" is about \" + Math.round(Math.abs(diffVal)) + \" \" + diff + \" the \" + compareTo.name + \" of  \" + this.props.measurementName + \", which is ~\" + Math.round(compareTo.value) + \".\");\n      return(string);\n    }\n    \n    render(){\n        this.submissionsRef = firebase.database().ref(this.props.dataRef);\n        console.log(\"rendered state: \", this.state);\n\n        let newAverage = (this.state.allInc.reduce((a,b) => a + b, 0) / this.state.allInc.length)\n        if (this.state.submitted) {\n                  \n          return(\n            <div style={{textAlign: 'center', color: 'navy'}}>\n              <h2 >How knowledgeable are you about {this.props.dataRef} for the flu?</h2>\n              <Deck style={{width: '10%'}} className={'comparison-cards'} cardContent={[\n                {\n                  cardHeader: \"Your Guess vs. the Actual value\",\n                  cardText: this.compare({name: \"Your estimate\", value: this.state.guessedInc}, {name: \"actual value\", value: this.state.actualInc})\n                },\n                {\n                  cardHeader: \"Your Guess vs. the Average guess\",\n                  cardText: this.compare({name: \"Your estimate\", value: this.state.guessedInc}, {name: \"average guess\", value: newAverage})\n                },\n                {\n                  cardHeader: \"The Average Guess vs. Actual Value\",\n                  cardText: this.compare({name: \"The average guess\", value: newAverage}, {name: \"actual value\", value: this.state.actualInc})\n                },\n              ]}\n              />\n              <EstimateBarChart inputtedGuess={this.state.guessedInc} averageGuess={newAverage} actualValue={this.state.actualInc}/>\n            </div>\n          )\n        } else {\n          return(\n            <div>\n                <p id=\"descriptive-paragraph\">{this.props.paragraph}</p>\n                <InputForms style={{visibility: 'hidden'}} inputs={this.props.inputs} onUpdate={this.handleChange.bind(this)} onClick={this.handleSubmit.bind(this)}  />\n                <EstimateBarChart inputtedGuess={this.state.guessedInc} averageGuess={newAverage} actualValue={this.state.actualInc}/>\n            </div>\n          )\n        }        \n\n    }    \n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Deck} from './cardDeck.js'\nimport {PageHeader} from './PageHeader.js'\nimport {PageFooter} from './PageFooter.js'\nimport {InputForms} from './InputForms.js'\nimport {EstimateBarChart} from './barChart.js'\nimport {Hospitalizations} from './hospitalizations.js'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './css/WebpageStyle.css'\n\nexport class EstimatePage extends React.Component {\n\n\n  render() {\n\n      return (\n        <div id=\"content\">\n          <PageHeader />\n          <Deck cardContent={[{\n            cardHeader: \"How Does the Flu Affect Us?\",\n            cardText: \"Dangers of the flu are very commonly overlooked, due to the normalization of the illness. It is important for people to understand the need for vaccinations, in the context of how dangerous these outbreaks can actually be. Despite being an illness which is present each year, it can still have drastic effects on our community, if we forego precautionary measures.\"      \n          }]}/>\n          <Hospitalizations dataRef={'hospitalizations'} measurementName={'total hospitalizations for the 2018-19 flu season'} actualValue={406.06} inputs={[{'guessedHosp': \"Estimate the average number of hospitalizations from the flu per population of 100,000 for the 2018-19 flu season: \"}]} paragraph={\"Despite the current quality of health care, influenza does still have a serious effect on the health of our communities. Despite the fact that the flu is not generally considered fatal, hospitalizations occur due to the illness every year, which people do not recognize. Test your perception of flu related hospitalizations against real data from last year's flu season below.\"}/>\n          <Hospitalizations dataRef={'incubation'} measurementName={'days of incubation for the flu'} actualValue={3} inputs={[{'guessedInc': \"Estimate the average number of days a disease is incubated: \"}]} paragraph={\"Dangers of the flu are very commonly overlooked, due to the normalization of the illness. It is important for people to understand the need for vaccinations, in the context of how dangerous these outbreaks can actually be. Despite being an illness which is present each year, it can still have drastic effects on our community, if we forego precautionary measures.\"}/>\n          <PageFooter />\n        </div>\n      );\n  }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Deck} from './cardDeck.js'\nimport {PageHeader} from './PageHeader.js'\nimport {PageFooter} from './PageFooter.js'\n\nexport class IntroPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cardContent: [{\n                cardHeader:'Who should get a vaccine?' ,\n                cardText: 'Everyone 6 months and older should get a flu vaccination to prevent the spread of illness.'\n            },{\n                cardHeader:'Why Get a Vaccine?' ,\n                cardText: 'The flu shot not only protecrs you from getting sick, but others who are more susceptible to the disease.'\n            },{\n                cardHeader:'How Common is the Flu?' ,\n                cardText: 'On average, 5%-20% of the United States will be infected by the flu.'\n            },{\n                cardHeader:'When is the Flu Most Common?' ,\n                cardText: 'The peak season of the flu occurs during the months of December-February.'\n            }]\n        }\n    }\n    render() {\n        const data = [{name: 'Your Estimate', value: 400}, {name: 'Average Estimate', value: 400}, {name: 'Actual Value', value: 400}];\n        return (\n          <div>\n            <PageHeader />\n            <Deck id=\"homepage-cards\" cardContent={this.state.cardContent}/>\n            \n            <PageFooter />\n          </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport './css/WebpageStyle.css'\n\n\n// Import firebase and StyledFirebaseAuth\nimport firebase from \"firebase\";\n\n// Configure Firebase (get configuration from Firebase Console)\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDZRrWIFCCG5zDIR1xU9SpuPG6PNs6NuJg\",\n//   authDomain: \"info430-flu-website.firebaseapp.com\",\n//   databaseURL: \"https://info430-flu-website.firebaseio.com\",\n//   projectId: \"info430-flu-website\",\n//   storageBucket: \"info430-flu-website.appspot.com\",\n//   messagingSenderId: \"508636748505\",\n//   appId: \"1:508636748505:web:668dedbd0f2166156dfcc8\",\n//   measurementId: \"G-KBV16ZWHT6\"\n// };\n\nexport class InputBox extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      suggestions:[],\n      input:'',\n      allDefaultZip: this.processDefault,//'none',\n      empty: this.upDateEmpty,\n    };\n\n    this.zipRef = firebase.database().ref(\"SavedZip\")\n  }\n\n\n// Renew state as user type\nonZipChanged = (e) => {\n  const { items } = this.props;\n  const value = e.target.value;\n  let suggestions = [];\n  if(value.length > 0) {\n    const regex = new RegExp(`^${value}`, 'i');\n    suggestions = items.sort().filter(v => regex.test(v));\n  }\n  this.setState(() => ({ suggestions, input: value }));\n  this.props.changeValue(this.state.input); \n  this.processDefault();\n}\n\n// Enable click for suggested values\nsuggestionSelected (value) {\n  this.setState(() => ({\n    input: value,\n    suggestions: [],\n  }))\n  this.props.changeValue(this.state.input);\n  this.processDefault();\n}\n\n// Return suggested values\nrenderSuggestions () {\n  const { suggestions } = this.state;\n  if(suggestions.length === 0) {\n    return null;\n  } \n  return (\n    <ul>\n      {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n    </ul>\n  )\n }\n\n //Generate allDefaultZip (overall), no change\n processDefault() {\n   this.upDateEmpty();\n   console.log(\"state.empty: \" + this.state.empty)\n   // If the database for the user is empty\n  if(this.state.empty) {\n    this.setState({allDefaultZip: \"none\"})\n  } else {\n    // let objectRef = this.zipRef.child(firebase.auth().currentUser.uid).child(newZip);\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => { \n      if (user) {\n        const userRef = this.zipRef.child(user.uid);\n        userRef.on(\"value\", (snapshot) => {\n          if(userRef !== null) {\n            let data = snapshot.val();\n            if(data == null) {\n              this.setState({allDefaultZip: \"none\"})\n              return \n            }\n            let dataKeys = Object.keys(data);\n              // Get the value of the data\n              let string = ''\n                dataKeys.map((d) => {\n                  string = string + \" \" + d \n                  console.log(\"currentString\" + string)\n                })\n            //Set the state\n            this.setState({allDefaultZip: string})\n          }\n        })\n      }\n    })\n  }\n  console.log(\"allDefaultZip:\" + this.state.allDefaultZip)\n }\n\n //check empty\n upDateEmpty () {\n  let objectRef = this.zipRef.child(firebase.auth().currentUser.uid);  //.child(newZip);\n  if(objectRef.child == null) {\n    this.setState(() => ({empty: true}))\n  } else {\n    this.setState(() => ({empty: false}))\n  }\n }\n\n saveDefault () {\n    let newZip = this.state.input;\n    const objectRef = this.zipRef.child(firebase.auth().currentUser.uid).child(newZip);\n    objectRef.set(({frequency: 1}))\n    this.processDefault();\n  }\n\n  deleteHistory() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => { \n      if (user) {\n        // const userRef = this.zipRef.child(user.uid);\n        let input = this.state.input;\n        let ref = this.zipRef.child(user.uid).child(input);\n        ref.remove();\n        this.upDateEmpty();\n        this.processDefault();\n    }})\n  }\n \n  render() {\n    const { input } = this.state;\n    return (\n      <form>\n        <div className=\"Input-Box\">\n          <div className=\"InputBox\">\n            <input value={input} onInput={this.onZipChanged} type=\"number\" />\n            {this.renderSuggestions()}\n          </div>\n        </div>          \n\n        <button type=\"button\" id=\"GoButton\" \n                onClick={this.onZipChanged.bind(this)}\n                disabled={!this.state.input}>Go</button>\n\n        <button type=\"button\" id=\"Save\" \n                onClick = {() => this.saveDefault()}\n                disabled= {!this.state.input}\n                >Save Zip</button>\n        <button type=\"button\" id=\"Delete\" \n                onClick = {() => this.deleteHistory()}\n                disabled= {!this.state.input}\n                >Delete Selected History</button>\n\n        <div style= {{color : '#747373'}}>My Saved History: \n          <p > {this.state.allDefaultZip}</p>\n          </div>\n      </form>\n    );\n  }\n}","export default `60609\n60643\n60616\n60621\n60610\n60657\n60634\n60614\n60661\n60611\n60613\n60628\n60624\n60639\n60619\n60647\n60630\n60660\n60603\n60618\n60606\n60649\n60638\n60411\n60659\n60617\n60641\n60605\n60623\n60612\n60608\n60707\n60654\n60601\n60622\n60656\n60640\n60602\n60631\n60629\n60637\n60653\n60626\n60636\n60615\n60644\n60632\n60625\n60604\n60655\n60652\n60645\n60607\n60620\n60646\n60651\n60706\n60438\n11102\n11373\n11229\n11223\n10022\n11417\n11218\n10036\n11379\n11228\n10032\n10023\n11106\n10003\n11357\n10021\n10006\n11222\n11210\n10011\n11432\n10461\n11212\n11235\n11214\n11374\n11103\n11205\n10075\n11208\n10451\n10462\n11206\n11413\n10457\n11411\n11234\n11203\n10301\n11358\n11207\n10013\n11226\n10005\n10169\n10314\n10303\n11385\n11221\n10307\n11201\n11217\n10469\n10016\n10026\n10029\n11215\n10465\n11220\n10308\n11375\n10474\n10012\n10028\n10017\n11372\n10463\n10473\n10009\n10025\n10472\n11429\n10309\n11236\n11204\n10456\n11211\n10010\n11104\n11434\n11367\n10128\n11360\n10001\n11418\n10459\n11414\n10119\n10452\n10302\n10467\n11366\n10019\n10305\n10035\n10027\n11354\n10024\n10466\n10034\n10458\n11419\n10281\n10312\n10044\n10475\n11356\n10040\n10002\n11370\n11219\n11231\n10310\n11368\n11224\n10007\n10038\n11361\n11694\n10014\n11209\n11420\n10107\n11239\n11004\n11230\n10304\n10470\n11377\n10033\n10468\n11416\n10065\n10018\n11435\n11369\n10030\n11225\n11362\n11415\n11216\n11233\n10455\n10460\n10037\n10306\n10039\n11105\n11249\n10031\n11355\n11213\n11412\n11101\n10453\n11241\n10454\n11237\n11427\n11378\n11692\n10004\n11421\n11365\n11232\n11428\n10168\n11422\n10282\n11238\n11364\n10704\n10020\n11691\n94133\n94124\n94122\n94115\n94107`.split('\\n');\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Card} from 'react-bootstrap';\nimport './css/WebpageStyle.css'\nimport {InputBox} from './InputBox'\nimport ZipName from './ZipName';\n\nexport class SearchCard extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    //this.props.header\n    //this.props.text\n    render() {\n        return (\n            <Card className=\"vaccine-card card mb-4\">\n                <Card.Header className= \"card-header\" id=\"SearchCardHeader\">\n                    <h2>{this.props.header}</h2> \n                </Card.Header>\n                <Card.Body className=\"card-body\">\n                    <div className=\"col-sm\">\n                        <Card.Text className=\"card-text\" id=\"SearchCardText\">\n                            {this.props.text}\n                        </Card.Text>\n                        <InputBox items={ZipName} \n                                changeValue={this.props.changeStoredValue} // Callback for VaccinePage\n                        /> \n                    </div>  \n                </Card.Body>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\n// import { Icon, FeatureGroup } from \"leaflet\";\n// import MarkerClusterGroup from 'react-leaflet-markercluster';\nimport './css/WebpageStyle.css';\n\nconst data = require('./data/csvjson.json')\n\nexport class VaccineMap extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        input: '',\n      };\n}\n\n  upDateInputValue () { // Save the selected zip from props (passing in from VaccinePage) and save as state\n    let propsValue = this.props.zip\n    this.setState({\n        input: propsValue\n    })\n  }\n\n  render() {\n    let selected = [];\n    let longLatGroup = [];\n    let wants = this.props.zip;\n    for (var i = 0; i < data.length; i++) {\n      let selectedSingle = data[i];\n      if (selectedSingle.ZIP == wants) {\n        selected.push(selectedSingle);\n        let longLat = [];\n        longLat.push(selectedSingle.Latitude);\n        longLat.push(selectedSingle.Longitude);\n        longLatGroup.push(longLat);\n      }\n    }\n    let bound;\n    if (longLatGroup.length == 0) {\n      bound = window.L.latLngBounds([[19.50139, -161.75583], [64.85694, -68.01197]])\n    } else {\n      bound = window.L.latLngBounds(longLatGroup)\n    }\n\n    return (\n      <Map center={[40,-97]} zoom={4} bounds={bound}>\n        <TileLayer\n        url='https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=3xOm9QSSZNB2dK7qFbWh'\n        attribution= '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\n      />\n      createMarkers();\n      {selected.map(marker => (\n        <Marker position={[marker.Latitude, marker.Longitude]}>\n          <Popup>{marker.Name}<br/>{marker.City}</Popup>\n        </Marker>\n      ))}\n      </Map>\n    )\n  }\n}","import React from 'react';\n// import PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport './css/WebpageStyle.css'\n\nconst styles = theme => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      flip: false,\n      paddingRight: theme.direction === 'rtl' ? '0px !important' : undefined,\n    },\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\nclass MuiVirtualizedTable extends React.Component {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 52,\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: 'inherit',\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nconst allrows = require('./data/csvjson.json');\n\nexport class ReactVirtualizedTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.setState({\n      input: ''\n    });\n    // this.allLocations = firebase.database.ref(\"locations\")\n    // this.allLocations.on('value', )\n  }\n\n  upDateInputValue () { // Save the selected zip from props (passing in from VaccinePage) and save as state\n    let propsValue = this.props.zip\n    this.setState({\n        input: propsValue\n    })\n  }\n\n  render() {\n    let rows = [];\n    let wants =  this.props.zip; \n    for (var i = 0; i < allrows.length; i++) {\n      let SingleRow = allrows[i];\n      if (SingleRow.ZIP == wants) {\n        rows.push(SingleRow);\n      }\n    }\n    let widthAvg =  window.innerWidth / 6;\n    return (\n      <Paper style={{ height: 200, width: '100%' }}>\n        <VirtualizedTable\n          rowCount={rows.length}\n          rowGetter={({i, index }) => rows[index]}\n          columns={[\n            {\n              width: widthAvg,\n\n              label: 'Name',\n              dataKey: 'Name',\n            },\n            {\n              width: widthAvg,\n              label: 'Address',\n              dataKey: 'Address',\n            },\n            {\n              width: widthAvg,\n              label: 'City',\n              dataKey: 'City',\n            },\n            {\n              width: widthAvg,\n              label: 'Latitude',\n              dataKey: 'Latitude',\n              numeric: true,\n            },\n            {\n              width: widthAvg,\n              label: 'Longitude',\n              dataKey: 'Longitude',\n              numeric: true,\n            },\n            {\n              width: widthAvg,\n              label: 'ZIP',\n              dataKey: 'ZIP',\n              numeric: true,\n            },\n          ]}\n        />\n      </Paper>\n    );\n  }\n}","import React from 'react';\nimport {SearchCard} from './SearchCard'\nimport {VaccineMap} from './Map'\nimport {ReactVirtualizedTable} from './Table'\nimport {PageFooter} from './PageFooter'\nimport {PageHeader} from './PageHeader'\nimport './css/WebpageStyle.css'\n\nexport class VaccinePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            input: '',\n          };\n\n    }\n\n    //Callback from InputBox and set the state input for SearchCard when button clicked\n    onChangeInputValue (value) {\n        this.setState({\n            input: value\n        })\n    }\n    \n    render() {\n        return (\n            <div >\n                {/* Header */}\n                <div>\n                    <PageHeader />\n                </div>\n\n                {/* Body */}\n                <div className=\"row\">\n                    {/* Vaccine Finder Card */}\n                    <div className= \"text-center col-md-12 col-sm-12\">\n                        <SearchCard id=\"Vaccine-Card\" header=\"Vaccine Finder\" text=\"Find flu shots near you?\"\n                                    // changeStoredValue={this.ReturnInputValue.bind(this)}\n                                    changeStoredValue={this.onChangeInputValue.bind(this)}\n                                    ></SearchCard>\n                    </div>\n\n                    {/* Map + Table */}\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\" id=\"vaccine-info\" >\n                                <h2 id='flu-shot-location-words' text-align=\"center\">Flu shot providers nearby:</h2>\n                                <div  className=\"leaflet-container\">\n                                    <VaccineMap zip={this.state.input}/>\n                                </div>\n                                <div>\n                                    <ReactVirtualizedTable className=\"table\" zip={this.state.input} id='list-providers'/>\n                                </div>\n                            </div>\n                            \n                        </div>\n                        \n                    </div>\n                </div>\n                <div>\n                <PageFooter />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {PageFooter} from './PageFooter'\nimport {PageHeader} from './PageHeader'\nimport {Card} from 'react-bootstrap';\nimport './css/WebpageStyle.css'\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nexport default function LogIn(props) {\n    return (\n        <div>\n            {/* Header */}\n            <div>\n                <PageHeader />\n            </div>\n\n            {/* Body */}\n            <Card className=\"card\">\n                <Card.Header className=\"card-header\" as=\"h2\" id=\"card-header\">Welcome to Flu Preventing Website!</Card.Header>\n                <Card.Body className=\"card-body\">\n                    <p id=\"logIn-Text\">Please Sign-In with Google Account</p>\n                    <StyledFirebaseAuth uiConfig={props.uiConfig} firebaseAuth={props.fbAuth()}/>\n                    </Card.Body>\n            </Card>\n\n            {/* Footer */}\n            <div>\n            <PageFooter />\n            </div>\n        </div>\n\n\n    )\n}","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nimport 'mdbreact/dist/css/mdb.css';\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBContainer } from \"mdbreact\";\nimport './css/WebpageStyle.css'\n\nimport { HashRouter as Router, Redirect, Route, Link } from \"react-router-dom\";\nimport { EstimatePage } from './estimatePage';\nimport { IntroPage } from './IntroPage';\nimport { VaccinePage } from './VaccinePage';\n\n\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// Import firebase and StyledFirebaseAuth\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport LogIn from './LogIn';\n\n// Configure Firebase (get configuration from Firebase Console)\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDZRrWIFCCG5zDIR1xU9SpuPG6PNs6NuJg\",\n  authDomain: \"info430-flu-website.firebaseapp.com\",\n  databaseURL: \"https://info430-flu-website.firebaseio.com\",\n  projectId: \"info430-flu-website\",\n  storageBucket: \"info430-flu-website.appspot.com\",\n  messagingSenderId: \"508636748505\",\n  appId: \"1:508636748505:web:668dedbd0f2166156dfcc8\",\n  measurementId: \"G-KBV16ZWHT6\"\n};\n\n// Initialize your application with the given configuration\nfirebase.initializeApp(firebaseConfig);\n\n// Set UI config for sign in (see: https://github.com/firebase/firebaseui-web-react)\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID\n  ]\n};\n\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false, // Local signed-in state.\n    }\n  }\n\n    // See: https://github.com/firebase/firebaseui-web-react#using-firebaseauth-with-local-state\n  componentDidMount() {\n    // Store the AuthObserver (so you can unauthorize the application)\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => this.setState({isSignedIn: !!user})\n  );\n    // Set the state of `isSignedIn`\n      \n    // Make a reference to this particular user in the `favorites/` reference\n\n    // When the value at the \"favorites/user.uid\" reference changes, \n    // change the state of \"favorites\" to be the value stored at that reference\n    \n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n      this.unregisterAuthObserver();\n  }\n\n\n\n  render() {\n      // If the state is not currently signed in, return a simple sign in screen\n      // See: https://github.com/firebase/firebaseui-web-react#using-styledfirebaseauth-with-a-redirect  \n\n      return (\n          <Router>\n\n            <div className=\"container\">\n              <MDBContainer>\n                <MDBBreadcrumb>\n                  <MDBBreadcrumbItem><Link to=\"/\"><span className=\"route-label\">Home</span></Link></MDBBreadcrumbItem>\n                  <MDBBreadcrumbItem><Link to=\"/Estimate_Page\"><span className=\"route-label\">Flu Statistics</span></Link></MDBBreadcrumbItem>\n                  <MDBBreadcrumbItem><Link to=\"/Vaccine_Page\"><span className=\"route-label\"> Find a Vaccine</span></Link></MDBBreadcrumbItem>\n                {/* Add an onClick event to signOut of the application*/}                            \n                  <MDBBreadcrumbItem onClick = {() => firebase.auth().signOut()}><Link to=\"/signIn\"><span className=\"route-label\">Sign-out</span></Link></MDBBreadcrumbItem>\n                </MDBBreadcrumb >\n              </MDBContainer>\n\n              <Route path=\"/signIn\" component={ LogIn } >\n                {!!firebase.auth().currentUser ? <Redirect to=\"/\" /> : <LogIn uiConfig ={uiConfig} fbAuth = {firebase.auth}/> } \n              </Route>\n              <Route exact path=\"/\" component={ IntroPage }>\n                {!!firebase.auth().currentUser ? <IntroPage /> : <Redirect to=\"/signIn\" />}\n              </Route>\n              <Route path=\"/Estimate_Page\" component={ EstimatePage }>\n                {!!firebase.auth().currentUser ? <EstimatePage /> : <Redirect to=\"/signIn\" />}\n              </Route>\n              <Route path=\"/Vaccine_Page\" component={ VaccinePage }>\n                {!!firebase.auth().currentUser ? <VaccinePage /> : <Redirect to=\"/signIn\" />}\n              </Route>\n            </div>\n          </Router>\n      );\n\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}